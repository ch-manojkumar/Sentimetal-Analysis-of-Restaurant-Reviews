{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNsagY4a0cwAGMfQl8CNPTl"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"yvBoriNT72sm"},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cCcdxR4JfplP","executionInfo":{"status":"ok","timestamp":1720714506136,"user_tz":-330,"elapsed":24091,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"ddf2b72a-0c16-452a-ba72-252717129323"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["x=pd.read_csv(\"/content/DSR.csv\")"],"metadata":{"id":"eYxbwN8787xg","executionInfo":{"status":"ok","timestamp":1720714767223,"user_tz":-330,"elapsed":448,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["x.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"sVcQz8Ws9XSL","executionInfo":{"status":"ok","timestamp":1720714773063,"user_tz":-330,"elapsed":499,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"137a4783-a4ad-467d-c563-9381352d6383"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              Review  Liked\n","0                           Wow... Loved this place.      1\n","1                                 Crust is not good.      0\n","2          Not tasty and the texture was just nasty.      0\n","3  Stopped by during the late May bank holiday of...      1\n","4  The selection on the menu was great and so wer...      1"],"text/html":["\n","  <div id=\"df-5f348fc2-6223-4219-8c0f-e9676f58e4c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Review</th>\n","      <th>Liked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wow... Loved this place.</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Crust is not good.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Not tasty and the texture was just nasty.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Stopped by during the late May bank holiday of...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>The selection on the menu was great and so wer...</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f348fc2-6223-4219-8c0f-e9676f58e4c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f348fc2-6223-4219-8c0f-e9676f58e4c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f348fc2-6223-4219-8c0f-e9676f58e4c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6603f88-3779-4c85-97eb-b5d49dacce9a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6603f88-3779-4c85-97eb-b5d49dacce9a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6603f88-3779-4c85-97eb-b5d49dacce9a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"Review\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 996,\n        \"samples\": [\n          \"They were excellent.\",\n          \"Your servers suck, wait, correction, our server Heimer sucked.\",\n          \"Will be back again!\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["x.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cXuby7AV-ba2","executionInfo":{"status":"ok","timestamp":1720714777257,"user_tz":-330,"elapsed":595,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"93273cec-3b26-494e-dfae-176193a0a7e8"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                Review  Liked\n","995  I think food should have flavor and texture an...      0\n","996                           Appetite instantly gone.      0\n","997  Overall I was not impressed and would not go b...      0\n","998  The whole experience was underwhelming, and I ...      0\n","999  Then, as if I hadn't wasted enough of my life ...      0"],"text/html":["\n","  <div id=\"df-98060c61-cff9-470a-9d79-8c169d91b1ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Review</th>\n","      <th>Liked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>995</th>\n","      <td>I think food should have flavor and texture an...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>Appetite instantly gone.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>Overall I was not impressed and would not go b...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>The whole experience was underwhelming, and I ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>Then, as if I hadn't wasted enough of my life ...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98060c61-cff9-470a-9d79-8c169d91b1ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-98060c61-cff9-470a-9d79-8c169d91b1ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-98060c61-cff9-470a-9d79-8c169d91b1ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cecbbb22-9f62-415f-9356-5b15e7d26ac2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cecbbb22-9f62-415f-9356-5b15e7d26ac2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cecbbb22-9f62-415f-9356-5b15e7d26ac2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"x\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Review\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Appetite instantly gone.\",\n          \"Then, as if I hadn't wasted enough of my life there, they poured salt in the wound by drawing out the time it took to bring the check.\",\n          \"Overall I was not impressed and would not go back.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x[\"Review\"],x[\"Liked\"],test_size=0.2)\n","print(x_train.shape)\n","print(x_test.shape)"],"metadata":{"id":"l5MzEB2W_a78","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1720714781931,"user_tz":-330,"elapsed":1593,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"2e6518de-2f94-48d6-be88-e6f3785a54f7"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["(800,)\n","(200,)\n"]}]},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","tfidf=TfidfVectorizer()\n","tfidf_train=tfidf.fit_transform(x_train)\n","tfidf_test=tfidf.transform(x_test)\n","\n","print(tfidf_train)\n","print(tfidf_test)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YePK1wYsDjkP","executionInfo":{"status":"ok","timestamp":1720714785143,"user_tz":-330,"elapsed":485,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"67da3e18-62b2-4bfa-f699-70c601b8f200"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["  (0, 750)\t0.356754922974248\n","  (0, 1606)\t0.3836595481089089\n","  (0, 1802)\t0.4434276337223943\n","  (0, 1722)\t0.5682797072238683\n","  (0, 455)\t0.45382968621215014\n","  (1, 34)\t0.25289462829082954\n","  (1, 1176)\t0.1767141757742013\n","  (1, 1598)\t0.1646840129205185\n","  (1, 86)\t0.20899817988959155\n","  (1, 490)\t0.2749873818345454\n","  (1, 1611)\t0.14686697638785487\n","  (1, 960)\t0.25555307916809994\n","  (1, 1139)\t0.3432472220974929\n","  (1, 344)\t0.3432472220974929\n","  (1, 1801)\t0.21512681665080238\n","  (1, 1345)\t0.32115446855377705\n","  (1, 1312)\t0.38101503373752005\n","  (1, 1091)\t0.2833866569137499\n","  (1, 1582)\t0.09806413716058683\n","  (1, 899)\t0.22664050706356706\n","  (2, 1356)\t0.5964224814209148\n","  (2, 1200)\t0.6845421853390203\n","  (2, 688)\t0.4191446291520352\n","  (3, 77)\t0.474391805274586\n","  (3, 1501)\t0.5916942468260613\n","  :\t:\n","  (798, 969)\t0.5688363268870547\n","  (798, 1399)\t0.3204565803013886\n","  (798, 613)\t0.2912462003428959\n","  (798, 1720)\t0.4433058920273619\n","  (798, 1582)\t0.16848186956941427\n","  (799, 592)\t0.2417451086090834\n","  (799, 1415)\t0.2417451086090834\n","  (799, 453)\t0.2417451086090834\n","  (799, 146)\t0.22772777429943888\n","  (799, 1715)\t0.22772777429943888\n","  (799, 803)\t0.21778231733209794\n","  (799, 704)\t0.22772777429943888\n","  (799, 1557)\t0.42013604317622905\n","  (799, 1755)\t0.1897476487128089\n","  (799, 118)\t0.2037649830224534\n","  (799, 1714)\t0.17703503528718698\n","  (799, 949)\t0.21778231733209794\n","  (799, 421)\t0.16391569952165638\n","  (799, 1061)\t0.10581796410513761\n","  (799, 1720)\t0.08185517282815215\n","  (799, 224)\t0.12910945273321606\n","  (799, 1052)\t0.11014497913786911\n","  (799, 1611)\t0.3727346168962824\n","  (799, 1345)\t0.2037649830224534\n","  (799, 1582)\t0.1866581897516946\n","  (0, 1802)\t0.22865239396438491\n","  (0, 1801)\t0.1903992948249631\n","  (0, 1768)\t0.17739492175601818\n","  (0, 1762)\t0.2117064295251424\n","  (0, 1729)\t0.24005210915037994\n","  (0, 1590)\t0.1860122322494841\n","  (0, 1504)\t0.3372196682438231\n","  (0, 1087)\t0.25960543476990594\n","  (0, 1021)\t0.1708459692054371\n","  (0, 925)\t0.24337925137454045\n","  (0, 899)\t0.20058955640904882\n","  (0, 833)\t0.14353186762410428\n","  (0, 832)\t0.1385814290773716\n","  (0, 691)\t0.3176663426242971\n","  (0, 639)\t0.3372196682438231\n","  (0, 502)\t0.3372196682438231\n","  (0, 59)\t0.25500915522993534\n","  (1, 1768)\t0.5108733553075854\n","  (1, 1754)\t0.4855734924260541\n","  (1, 1720)\t0.16441574504647757\n","  (1, 1590)\t0.2678450213705847\n","  (1, 1582)\t0.12497497827242471\n","  (1, 1580)\t0.2580088206378048\n","  (1, 900)\t0.4855734924260541\n","  (1, 709)\t0.2554366776537927\n","  :\t:\n","  (195, 1000)\t0.5946815219264066\n","  (195, 54)\t0.18945784719499206\n","  (196, 1598)\t0.4921612027013273\n","  (196, 832)\t0.46794001511084843\n","  (196, 53)\t0.7340364383418864\n","  (197, 1598)\t0.36324652098615595\n","  (197, 1438)\t0.39584069902323077\n","  (197, 1306)\t0.29160511753874296\n","  (197, 832)\t0.1726848658389449\n","  (197, 589)\t0.420205893074072\n","  (197, 562)\t0.37855331872818965\n","  (197, 523)\t0.37855331872818965\n","  (197, 426)\t0.3651441848218655\n","  (198, 1762)\t0.3365682369379416\n","  (198, 1598)\t0.23171881874635408\n","  (198, 1382)\t0.48296637561768296\n","  (198, 1037)\t0.3720360112081817\n","  (198, 960)\t0.35957623682880063\n","  (198, 634)\t0.3720360112081817\n","  (198, 57)\t0.4400625337183895\n","  (199, 1259)\t0.5902336208068298\n","  (199, 1103)\t0.45438588011000325\n","  (199, 832)\t0.24255826798862934\n","  (199, 47)\t0.5128923174953594\n","  (199, 39)\t0.35109073202024715\n"]}]},{"cell_type":"code","source":["#support vector machine\n","from sklearn.svm import SVC\n","svm=SVC()\n","svm.fit(tfidf_train,y_train)\n","pred=svm.predict(tfidf_test)\n","pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aFMkVtZBFSem","executionInfo":{"status":"ok","timestamp":1720714791386,"user_tz":-330,"elapsed":509,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"12f3ba3f-80b7-4f3d-c7c8-bce9d8b7baed"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","acc=accuracy_score(y_test,pred)\n","acc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YMfRMzRJHAs9","executionInfo":{"status":"ok","timestamp":1720714794885,"user_tz":-330,"elapsed":632,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"d9eb0db5-19e3-4360-edc0-d96946301d36"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.85"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["from sklearn import metrics\n","import matplotlib.pyplot as plt\n","cm = metrics.confusion_matrix(y_test, svm.predict(tfidf_test))\n","\n","cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=cm,\n","                                            display_labels=[\"Not Liked\",\"Liked\"])\n","\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"XM94VIaTKWrn","executionInfo":{"status":"ok","timestamp":1720714799328,"user_tz":-330,"elapsed":1349,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"54574e85-3b45-4b56-9e6b-47f830326455"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","nb=LogisticRegression()\n","nb.fit(tfidf_train,y_train)\n","pred=nb.predict(tfidf_test)\n","pred\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5veJuatQEGW9","executionInfo":{"status":"ok","timestamp":1720714804083,"user_tz":-330,"elapsed":441,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"4bad93cc-e12a-407b-d5b3-cce2dbe580c4"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["acc=accuracy_score(y_test,pred)\n","acc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k7EjJxT_E9m4","executionInfo":{"status":"ok","timestamp":1720714808589,"user_tz":-330,"elapsed":609,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"5fd82162-1803-4392-c757-7600d4fb0f7c"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.85"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["cm = metrics.confusion_matrix(y_test, nb.predict(tfidf_test))\n","\n","cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix=cm,\n","                                            display_labels=[\"Not Liked\",\"Liked\"])\n","\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"i93qr83iE5mX","executionInfo":{"status":"ok","timestamp":1720714811155,"user_tz":-330,"elapsed":7,"user":{"displayName":"MANOJ","userId":"05802120236265519143"}},"outputId":"4ce1717d-098f-41ff-a49b-4a1c30ed5707"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}
